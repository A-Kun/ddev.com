---
import Terminal from "@components/Terminal.astro"
import { Tabs } from "astro-tabs"
import CommunityCTA from "./CommunityCTA.astro"

export interface Props {
  latestVersion: string
}

const { latestVersion } = Astro.props
---

<div class="prose">
  <p class="text-gray-600 mb-16">
    Weâ€™ll use Docker Desktop since itâ€™s the most straightforward of <a
      href="https://ddev.readthedocs.io/en/latest/users/install/docker-installation/#macos"
      >several options</a
    >.
  </p>

  <h2 class="text-3xl mt-24">
    <small class="block font-mono text-xs text-gray-500">1/3</small>Install
    Docker
  </h2>
</div>

<Tabs class="-mx-4 mb-6" style="max-width: 41.5rem;">
  <Fragment slot="tab-1">Homebrew</Fragment>
  <Fragment slot="tab-2">Download</Fragment>
  <Fragment slot="panel-1">
    <div class="prose py-5">
      <p>
        With <a href="https://brew.sh" target="_blank">Homebrew</a> installed, you
        can install Docker Desktop with one command:
      </p>
      <Terminal code={`â†’ brew install homebrew/cask/docker`} />
    </div>
  </Fragment>
  <Fragment slot="panel-2">
    <div class="prose py-5">
      <p>
        Download and run the <a
          href="https://www.docker.com/products/docker-desktop"
          target="_blank">Docker Desktop installer</a
        >.
      </p>
    </div>
  </Fragment>
</Tabs>

<div class="prose">
  <p>Confirm that youâ€™ve now got a Docker provider:</p>
  <Terminal code={`â†’ docker -v\nDocker version 20.10.21, build baeda1f`} />

  <h2 class="text-3xl mt-24">
    <small class="block font-mono text-xs text-gray-500">2/3</small>Install DDEV
  </h2>
</div>

<Tabs class="-mx-4 mb-6" style="max-width: 41.5rem;">
  <Fragment slot="tab-1">Homebrew</Fragment>
  <Fragment slot="tab-2">Install Script</Fragment>
  <Fragment slot="panel-1">
    <div class="prose py-5">
      <Terminal code={`â†’ brew install drud/ddev/ddev`} />
    </div>
  </Fragment>
  <Fragment slot="panel-2">
    <div class="prose py-5">
      <Terminal
        code={`â†’ curl -fsSL https://raw.githubusercontent.com/drud/ddev/master/scripts/install_ddev.sh | bash`}
      />
    </div>
  </Fragment>
</Tabs>

<div class="prose">
  <p>Confirm that youâ€™ve now got DDEV installed: ðŸŽ‰</p>
  <Terminal code={`â†’ ddev -v\nddev version ${latestVersion}`} />

  <h2 class="text-3xl mt-24">
    <small class="block font-mono text-xs text-gray-500">3/3</small>Create a
    Project
  </h2>

  <p>Navigate to a project youâ€™d like to spin up with DDEV:</p>
  <Terminal code={`â†’ cd ~/dev/my-project`} />

  <p>
    Initialize the project by running the <a
      href="https://ddev.readthedocs.io/en/latest/users/usage/commands/#config"
      target="_blank"
      ><code>ddev config</code>
    </a> command:
  </p>
  <Terminal code={`â†’ ddev config`} />

  <p>
    Start the project for the first time. Youâ€™ll use the same command to start
    it later, too!
  </p>
  <Terminal code={`â†’ ddev start`} />

  <p>
    If itâ€™s a Composer project, you may also need to run <a
      href="https://ddev.readthedocs.io/en/latest/users/usage/commands/#composer"
      target="_blank"
      ><code>ddev composer install</code>
    </a>.
  </p>
</div>

<div class="prose">
  <h2 class="text-3xl mt-24">Explore & Enjoy!</h2>

  <p>
    Take a peek at your projectâ€™s new <code>.ddev/</code> directory. You can add
    this to your repo to share your DDEV config, edit <code
      >.ddev/ddev.yaml</code
    > to change <a
      href="https://ddev.readthedocs.io/en/latest/users/configuration/config/"
      target="_blank">project options</a
    >, or even go about your business and pretend this folder doesnâ€™t exist.
  </p>

  <p>
    Run the <a
      href="https://ddev.readthedocs.io/en/latest/users/usage/commands/#help"
      target="_blank"
      >help command
    </a> (or plain <code>ddev</code>) to see the actions you can take with the
    CLI:
  </p>

  <Terminal code={`â†’ ddev -h`} />

  <p>
    Use the <a
      href="https://ddev.readthedocs.io/en/latest/users/usage/commands/#describe"
      target="_blank"
      >describe command
    </a> to see a projectâ€™s parts and database connection details:
  </p>

  <Terminal code={`â†’ ddev describe`} />

  <p>
    If youâ€™re done working on a project and want to shut it down without
    removing anything, use the <a
      href="https://ddev.readthedocs.io/en/latest/users/usage/commands/#stop"
      target="_blank"
      >stop command
    </a>:
  </p>

  <Terminal code={`â†’ ddev stop`} />

  <p>
    If you were just kicking the tires and you want to permanently delete the
    project and its resources without touching your code, run the <a
      href="https://ddev.readthedocs.io/en/latest/users/usage/commands/#delete"
      target="_blank"
      >delete command
    </a>:
  </p>

  <Terminal code={`â†’ ddev delete`} />

  <p>
    DDEV will remove everything it created for the project and have no memory of
    its existence.
  </p>

  <p>
    To uninstall DDEV, first clean up its Docker bits and delete its files from
    your system:
  </p>

  <Terminal
    code={`â†’ ddev clean --all\nâ†’ ddev hostname --remove-inactive\nâ†’ rm -r ~/.ddev\nâ†’ rm -r ~/.ddev_mutagen_data_directory`}
  />

  <p>
    Then remove the <code>ddev</code> binary however you installed it:
  </p>

  <Tabs class="-mx-4 -mt-4" style="max-width: 41.5rem;">
    <Fragment slot="tab-1">Homebrew</Fragment>
    <Fragment slot="tab-2">Install Script</Fragment>
    <Fragment slot="panel-1">
      <div class="prose py-5">
        <Terminal code={`â†’ brew uninstall ddev`} />
      </div>
    </Fragment>
    <Fragment slot="panel-2">
      <div class="prose py-5">
        <Terminal code={`â†’ rm /usr/local/bin/ddev`} />
      </div>
    </Fragment>
  </Tabs>

  <CommunityCTA />
</div>
