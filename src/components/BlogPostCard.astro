---
/**
 * A single card used to represent a blog post. Should probably be placed in a flex grid.
 */
export interface Props {
  post: object
}

import {
  getAuthorUrl,
  getAuthorImage,
  formatDate,
  getCategoryUrl,
} from "../lib/api"

const { post } = Astro.props

const authorUrl = getAuthorUrl(post.frontmatter.author)
const authorImage = getAuthorImage(post.frontmatter.author)

const firstCategory = post.frontmatter.categories.length
  ? post.frontmatter.categories[0]
  : null
---

<div class="flex flex-col rounded-lg overflow-hidden">
  <div class="flex-shrink-0">
    <img
      class="h-48 w-full object-cover"
      src={post.frontmatter.featuredImage}
      alt=""
    />
  </div>
  <div class="flex-1 bg-gray-100 p-6 flex flex-col justify-between">
    <div class="flex-1">
      <p class="text-sm font-mono text-indigo-600">
        <a href={getCategoryUrl(firstCategory)} class="hover:underline">
          {firstCategory}
        </a>
      </p>
      <a href={post.url} class="block mt-2">
        <p class="text-xl font-semibold text-gray-900">
          {post.frontmatter.title}
        </p>
      </a>
    </div>
    <div class="mt-6 flex items-center">
      <div class="flex-shrink-0">
        <a href={authorUrl}>
          <span class="sr-only">{post.frontmatter.author}</span>
          <img class="h-10 w-10 rounded-full" src={authorImage} alt="" />
        </a>
      </div>
      <div class="ml-3">
        <p class="text-sm font-medium text-gray-900">
          <a href={authorUrl} class="hover:underline">
            {post.frontmatter.author}
          </a>
        </p>
        <div class="flex space-x-1 text-sm text-gray-500">
          <time datetime={post.frontmatter.pubDate}
            >{formatDate(post.frontmatter.pubDate)}</time
          >
          <span aria-hidden="true"> &middot;</span>
          <span> {post.frontmatter.minutesRead}</span>
        </div>
      </div>
    </div>
  </div>
</div>
