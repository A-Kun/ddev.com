---
import { getCollection, getEntryBySlug } from "astro:content"
import { formatDate, getCategoryUrl, getSlug } from "./../../lib/api"

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog")
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}

const { entry } = Astro.props
const { Content, remarkPluginFrontmatter } = await entry.render()

const author = await getEntryBySlug("authors", getSlug(entry.data.author))

import Layout from "./../../layouts/Layout.astro"
import PostBody from "./../../components/PostBody.astro"
import Heading from "./../../components/Heading.astro"
import BlogPostFooter from "./../../components/BlogPostFooter.astro"
import FeatureImage from "./../../components/FeatureImage.astro"

const hasFeatureImage =
  Object.hasOwn(entry.data, "featureImage") &&
  Object.hasOwn(entry.data.featureImage, "src")
const shouldDisplayFeatureImage =
  hasFeatureImage &&
  (!Object.hasOwn(entry.data.featureImage, "hide") ||
    entry.data.featureImage?.hide === false)
const authorImage = author?.data.avatarUrl
---

<Layout
  title={entry.data.title}
  ogImage={hasFeatureImage ? entry.data.featureImage.src : null}
  ogImageAlt={hasFeatureImage ? entry.data.featureImage.alt : null}
>
  <main class="max-w-4xl mx-auto mb-24">
    <Heading
      title={entry.data.title}
      date={formatDate(entry.data.pubDate, { month: "long" })}
      author={entry.data.author}
      authorUrl={`/blog/author/${author.slug}`}
      authorAvatar={authorImage}
      readTime={remarkPluginFrontmatter.minutesRead}
    />
    {
      hasFeatureImage && shouldDisplayFeatureImage && (
        <FeatureImage
          src={entry.data.featureImage.src}
          alt={entry.data.featureImage.alt}
          caption={entry.data.featureImage.caption}
          credit={entry.data.featureImage.credit}
          shadow={entry.data.featureImage.shadow}
        />
      )
    }
    <div class="flex">
      <div class="w-2/3">
        <PostBody>
          <Content />
        </PostBody>
      </div>
      <div class="w-1/3 pl-24 mt-1">
        {
          entry.data.categories.length && (
            <>
              <span class="font-mono text-sm block text-navy-300 tracking-wider">
                Posted In
              </span>
              <ul class="mt-1">
                {entry.data.categories.map((category) => (
                  <li class="my-1">
                    <a href={getCategoryUrl(category)} class="font-bold">
                      {category}
                    </a>
                  </li>
                ))}
              </ul>
            </>
          )
        }
      </div>
    </div>
  </main>
  <BlogPostFooter activeSlug={entry.slug} />
</Layout>
